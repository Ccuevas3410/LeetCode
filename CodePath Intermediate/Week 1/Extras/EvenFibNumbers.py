# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


# U - > We need to find the sum of all Fib numbers below 4 million that are even
# M -> We use a While loop like in previous
# P - > We keep a currentFibNumber and we add even numbers to total
# I -> 
# R -> 
# E -> 



def evenFibNumbers():

    totalSum = 0
  
    previouspreviousNumber= 0
    previousNumber = 0
    currentNumber = 1

    for i in range(1,4000000):

            previouspreviousNumber = previousNumber
            previousNumber = currentNumber
            currentNumber = previouspreviousNumber + previousNumber


            if currentNumber> 4000000:
                break

            if currentNumber%2==0:
                totalSum += currentNumber

           
    return totalSum



print(evenFibNumbers())